name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  applicationfolder: currency-exchange-api
  AWS_REGION: eu-north-1
  S3BUCKET: deployment-bucket-currency
  CODEDEPLOY_APPLICATION: currency-api-codeploy
  CODEDEPLOY_DEPLOYMENT_GROUP: currency-exchange-api-deployment

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          java-package: 'jdk'

      - name: Move Secrets Properties
        run: |
          echo "api.key=${{ secrets.API_KEY }}" >> src/main/resources/secrets.properties

      - name: Build and Package Maven
        working-directory: ${{ github.workspace }}
        run: |
          mvn clean package

      - name: Move JAR to Deployment Folder
        run: |
          if [ ! -d "deployment" ]; then
            mkdir deployment
          fi
          cp target/currency-exchange-api-1.0.0.jar deployment/

      - name: Copy Application Properties
        run: |
          cp src/main/resources/application.properties deployment/

      - name: Create Deployment ZIP
        run: |
          cd deployment
          zip -r ../deployment.zip .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload Artifact to S3
        run: aws s3 cp deployment.zip s3://${{ env.S3BUCKET }}/

  deploy:
    name: Deploy to EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create Deployment
        run: |
          echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ env.CODEDEPLOY_DEPLOYMENT_GROUP }}"
          aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_APPLICATION }} \
            --deployment-group-name ${{ env.CODEDEPLOY_DEPLOYMENT_GROUP }} \
            --s3-location bucket=${{ env.S3BUCKET }},bundleType=zip,key=deployment.zip,versionLabel=$(git rev-parse HEAD),fileExistsBehavior=OVERWRITE \
            --ignore-application-stop-failures
